1. 

Q: How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

A: Using command line to view the differences actually made it much easier to see 
what was wrong with the code quicker.

2. 

Q: How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

A: I would be able to see my mistake when a program, or code, breaks or changes.
Also, it would allow for me to make changes or try new things and revert back if needed.

3. 

Q: What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?

A: Pros - Personal decision and control, Less commits, easier to read.
   Cons - Likelihood to forget to commit, commit too often and clutter, commit not often 
   		  enough and description of commit doesn't specify a change made.

4.

Q: Why do you think some version control systems, like Git, allow saving multiple files 
in one commit, while others, like Google Docs, treat each file separately?

A: Type of files used in each. I.e. Git can have multiple files to one program whereas
Google Docs only deals with documents and single files. ????

5.

Q: How can you use the commands git log and git diff to view the history of files?

A: git log - shows all changes to see history of commits
   git diff - shows "differences" or more detailed between two or more commits

6.

Q: How might using version control make you more confident to make changes that could
break something?

A: With version control, being sure you can find where you broke something gives major 
confidence to try new ways to code or experiment with a given task.

7.

Q: Now that you have your workspace set up, what do you want to try using Git for?

A: I want to use Git for everything I write in code for Udacity and further endeavours!

